#!/usr/bin/env node

var cli = require('commander'),
    join = require('path').join,
    pkg = require('./package.json'),
    u = require('./lib/util');

var registryUrl = "http://audrey.herokuapp.com",
    configFile = loadConfigFromFile(),
    defaults = {
      server: {
        repositories: [],
        port: 5001,
        registry: registryUrl
      },
      agent: {
        repositories: [],
        registry: registryUrl
      },
      registry: {
        port: process.env.PORT || 5000
      }
    };

function loadConfigFromFile() {
  try {
    return require(join(process.cwd(), 'audrey.json'));
  } catch (e) {
    return {};
  }
}

function list(str) {
  return str.split(',');
}

function run(config, defaultConfig) {
  config = config || {};
  defaultConfig = defaultConfig || {};

  return function (options) {
    u.merge(config, defaultConfig);
    u.merge(options, config);

    require('./lib/' + options._name)(options);
  };
}

cli.command('server')
    .description('Starts a server')
    .option("-r, --registry <url>", "The url of the registry")
    .option("-a, --address <address>",
        "IP address or hostname on which to listen for agent connections. By default it is inferred from the local NICs")
    .option("-p, --port <port>", "Port on which to listen for agent connections", parseInt)
    .option("-R, --repositories <urls>", "A comma separated list of urls of the repositories to build", list)
    .action(run(configFile.server, defaults.server));

cli.command('agent')
    .description('Starts an agent')
    .option("-r, --registry <url>", "The url of the registry")
    .option("-R, --repositories <urls>", "A comma separated list of urls of the repositories to build", list)
    .action(run(configFile.agent, defaults.agent));

cli.command('registry')
    .description('Starts a registry')
    .option("-p, --port <port>", "Port on which to listen for server and agent connections", parseInt)
    .action(run(configFile.registry, defaults.registry));

cli.parse(process.argv);

if (!cli.args.length) cli.help();